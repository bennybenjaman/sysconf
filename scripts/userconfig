#!/usr/bin/env python

import os
from os.path import exists, join, normpath, dirname, isfile, isdir

from sysconf import BSD
from sysconf import cwd
from sysconf import DIR_HOME
from sysconf import DIR_USER_HOME
from sysconf import is_x_running
from sysconf import LINUX
from sysconf import log
from sysconf import logerr
from sysconf import logtitle
from sysconf import safe_makedirs
from sysconf import safe_remove
from sysconf import sh
from sysconf import symlink
from sysconf import wget
from sysconf import which


SUBL_INSTPKGDIR = join(DIR_USER_HOME, '.config/sublime-text-3/Installed Packages')
SUBL_PKGMGR_URL = "https://sublime.wbond.net/Package%20Control.sublime-package"


def symlink_path(name, _do_file=True):
    src = normpath(join(DIR_HOME, name))
    dst = normpath(join(DIR_USER_HOME, name))
    if isfile(src):
        safe_remove(dst)
    elif isdir(src):
        sh("rm -rf %s" % dirname(dst))
    else:
        assert exists(src), src
    safe_makedirs(dirname(dst))
    symlink(src, dst)


def main():
    # copy user home config files
    logtitle("symlinking user cfg files")
    for name in os.listdir(DIR_HOME):
        if isfile(join(DIR_HOME, name)):
            symlink_path(name)

    # transmission
    logtitle("symlinking transmission cfg file")
    symlink_path('.config/transmission/settings.json')

    # configure sublime
    if LINUX and is_x_running():
        # config files
        logtitle("symlinking sublime config files")
        symlink_path('.config/sublime-text-3/Packages/User')

        # install sublime pkg manager
        safe_makedirs(SUBL_INSTPKGDIR)
        import pdb; pdb.set_trace()
        with cwd(SUBL_INSTPKGDIR):
            if not exists('Package Control.sublime-package'):
                logtitle("downloading and install sublime pkg manager")
                wget(SUBL_PKGMGR_URL, 'Package Control.sublime-package')
                log('sublime', 'pkg mgr installed')

    # configure git
    if which('git'):
        logtitle("configuring git")
        sh("git config --global push.default simple")
    else:
        logerr('git', 'git not installed')

    # BSD
    if BSD:
        logtitle("set bash as default shell")
        sh("chsh -s /usr/local/bin/bash")

    # SSH
    if os.path.exists(os.path.expanduser("~/.ssh/id_rsa")):
        sh("chmod 600 ~/.ssh/id_rsa")

main()
